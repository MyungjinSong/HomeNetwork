{
    "bridge": {
        "name": "Homebridge 349E",
        "username": "XX:XX:XX:XX:XX:XX",
        "port": 51332,
        "pin": "xxx-xx-xxx"
    },
    "accessories": [
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "Livingroom Light 1 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/light/state/1/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/light/command/1/1",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "history": true,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "Livingroom Light 2 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/light/state/1/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/light/command/1/2",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "history": true,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "Hallway Light (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/light/state/1/3",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/light/command/1/3",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "history": true,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "Bedroom Light (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/light/state/2/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/light/command/2/1",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "history": true,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "Outdoor Unit Room Light (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/light/state/2/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/light/command/2/2",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "history": true,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "Library Light (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/light/state/3/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/light/command/3/1",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "history": true,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "PCRoom Light (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/light/state/4/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/light/command/4/1",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "history": true,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "Table Light (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/light/state/6/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/light/command/6/1",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "history": true,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "Countertop Light (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/light/state/6/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/light/command/6/2",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "history": true,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "outlet",
            "name": "Living room Outlet1 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/outlet/state/1/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/outlet/command/1/1",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "onValue": 1,
            "offValue": 0,
            "integerValue": false,
            "history": true
        },
        {
            "accessory": "mqttthing",
            "type": "outlet",
            "name": "Living room Outlet2 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/outlet/state/1/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/outlet/command/1/2",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "onValue": 1,
            "offValue": 0,
            "integerValue": false,
            "history": true
        },
        {
            "accessory": "mqttthing",
            "type": "outlet",
            "name": "Bedroom Outlet1 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/outlet/state/2/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/outlet/command/2/1",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "onValue": 1,
            "offValue": 0,
            "integerValue": false,
            "history": true
        },
        {
            "accessory": "mqttthing",
            "type": "outlet",
            "name": "Bedroom Outlet2 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/outlet/state/2/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/outlet/command/2/2",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "onValue": 1,
            "offValue": 0,
            "integerValue": false,
            "history": true
        },
        {
            "accessory": "mqttthing",
            "type": "outlet",
            "name": "Library Outlet1 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/outlet/state/3/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/outlet/command/3/1",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "onValue": 1,
            "offValue": 0,
            "integerValue": false,
            "history": true
        },
        {
            "accessory": "mqttthing",
            "type": "outlet",
            "name": "Library Outlet2 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/outlet/state/3/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/outlet/command/3/2",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "onValue": 1,
            "offValue": 0,
            "integerValue": false,
            "history": true
        },
        {
            "accessory": "mqttthing",
            "type": "outlet",
            "name": "PC room Outlet1 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/outlet/state/4/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/outlet/command/4/1",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "onValue": 1,
            "offValue": 0,
            "integerValue": false,
            "history": true
        },
        {
            "accessory": "mqttthing",
            "type": "outlet",
            "name": "PC room Outlet2 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/outlet/state/4/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/outlet/command/4/2",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "onValue": 1,
            "offValue": 0,
            "integerValue": false,
            "history": true
        },
        {
            "accessory": "mqttthing",
            "type": "outlet",
            "name": "Kitchen Outlet1 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/outlet/state/6/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/outlet/command/6/1",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "onValue": 1,
            "offValue": 0,
            "integerValue": false,
            "history": true
        },
        {
            "accessory": "mqttthing",
            "type": "outlet",
            "name": "Kitchen Outlet2 (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/outlet/state/6/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/outlet/command/6/2",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "onValue": 1,
            "offValue": 0,
            "integerValue": false,
            "history": true
        },
        {
            "accessory": "mqttthing",
            "type": "valve",
            "valveType": "faucet",
            "name": "Gas Valve (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "setActive": {
                    "topic": "home/hillstate/gasvalve/command",
                    "apply": "return JSON.stringify({state: message});"
                },
                "getActive": {
                    "topic": "home/hillstate/gasvalve/state",
                    "apply": "return JSON.parse(message).state;"
                },
                "getInUse": {
                    "topic": "home/hillstate/gasvalve/state",
                    "apply": "return JSON.parse(message).state;"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "thermostat",
            "name": "Livingroom Thermostat (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getCurrentHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/state/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "setTargetHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/command/1",
                    "apply": "return JSON.stringify({state: message});"
                },
                "getTargetHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/state/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "getCurrentTemperature": {
                    "topic": "home/hillstate/thermostat/state/1",
                    "apply": "return JSON.parse(message).currentTemperature;"
                },
                "setTargetTemperature": {
                    "topic": "home/hillstate/thermostat/command/1",
                    "apply": "return JSON.stringify({targetTemperature: message});"
                },
                "getTargetTemperature": {
                    "topic": "home/hillstate/thermostat/state/1",
                    "apply": "return JSON.parse(message).targetTemperature;"
                }
            },
            "minTemperature": 18,
            "maxTemperature": 30,
            "restrictHeatingCoolingState": [
                0,
                1
            ],
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "thermostat",
            "name": "Bedroom Thermostat (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getCurrentHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/state/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "setTargetHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/command/2",
                    "apply": "return JSON.stringify({state: message});"
                },
                "getTargetHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/state/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "getCurrentTemperature": {
                    "topic": "home/hillstate/thermostat/state/2",
                    "apply": "return JSON.parse(message).currentTemperature;"
                },
                "setTargetTemperature": {
                    "topic": "home/hillstate/thermostat/command/2",
                    "apply": "return JSON.stringify({targetTemperature: message});"
                },
                "getTargetTemperature": {
                    "topic": "home/hillstate/thermostat/state/2",
                    "apply": "return JSON.parse(message).targetTemperature;"
                }
            },
            "minTemperature": 18,
            "maxTemperature": 30,
            "restrictHeatingCoolingState": [
                0,
                1
            ],
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "thermostat",
            "name": "Library Thermostat (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getCurrentHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/state/3",
                    "apply": "return JSON.parse(message).state;"
                },
                "setTargetHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/command/3",
                    "apply": "return JSON.stringify({state: message});"
                },
                "getTargetHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/state/3",
                    "apply": "return JSON.parse(message).state;"
                },
                "getCurrentTemperature": {
                    "topic": "home/hillstate/thermostat/state/3",
                    "apply": "return JSON.parse(message).currentTemperature;"
                },
                "setTargetTemperature": {
                    "topic": "home/hillstate/thermostat/command/3",
                    "apply": "return JSON.stringify({targetTemperature: message});"
                },
                "getTargetTemperature": {
                    "topic": "home/hillstate/thermostat/state/3",
                    "apply": "return JSON.parse(message).targetTemperature;"
                }
            },
            "minTemperature": 18,
            "maxTemperature": 30,
            "restrictHeatingCoolingState": [
                0,
                1
            ],
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "thermostat",
            "name": "PC Room Thermostat (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getCurrentHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/state/4",
                    "apply": "return JSON.parse(message).state;"
                },
                "setTargetHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/command/4",
                    "apply": "return JSON.stringify({state: message});"
                },
                "getTargetHeatingCoolingState": {
                    "topic": "home/hillstate/thermostat/state/4",
                    "apply": "return JSON.parse(message).state;"
                },
                "getCurrentTemperature": {
                    "topic": "home/hillstate/thermostat/state/4",
                    "apply": "return JSON.parse(message).currentTemperature;"
                },
                "setTargetTemperature": {
                    "topic": "home/hillstate/thermostat/command/4",
                    "apply": "return JSON.stringify({targetTemperature: message});"
                },
                "getTargetTemperature": {
                    "topic": "home/hillstate/thermostat/state/4",
                    "apply": "return JSON.parse(message).targetTemperature;"
                }
            },
            "minTemperature": 18,
            "maxTemperature": 30,
            "restrictHeatingCoolingState": [
                0,
                1
            ],
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "fan",
            "name": "Ventilator (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "caption": "Ventilator(MQTT)",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/ventilator/state",
                    "apply": "return JSON.parse(message).state;"
                },
                "setOn": {
                    "topic": "home/hillstate/ventilator/command",
                    "apply": "return JSON.stringify({state: message});"
                },
                "getRotationSpeed": {
                    "topic": "home/hillstate/ventilator/state",
                    "apply": "return JSON.parse(message).rotationspeed;"
                },
                "setRotationSpeed": {
                    "topic": "home/hillstate/ventilator/command",
                    "apply": "return JSON.stringify({rotationspeed: message});"
                }
            },
            "integerValue": true,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "heaterCooler",
            "name": "Livingroom AirConditioner (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getActive": {
                    "topic": "home/hillstate/airconditioner/state/1",
                    "apply": "return JSON.parse(message).active;"
                },
                "setActive": {
                    "topic": "home/hillstate/airconditioner/command/1",
                    "apply": "return JSON.stringify({active: message});"
                },
                "getCurrentHeaterCoolerState": {
                    "topic": "home/hillstate/airconditioner/state/1",
                    "apply": "return JSON.parse(message).state;"
                },
                "getRotationSpeed": {
                    "topic": "home/hillstate/airconditioner/state/1",
                    "apply": "return JSON.parse(message).rotationspeed;"
                },
                "setRotationSpeed": {
                    "topic": "home/hillstate/airconditioner/command/1",
                    "apply": "return JSON.stringify({rotationspeed: message});"
                },
                "getCurrentTemperature": {
                    "topic": "home/hillstate/airconditioner/state/1",
                    "apply": "return JSON.parse(message).currentTemperature;"
                },
                "getCoolingThresholdTemperature": {
                    "topic": "home/hillstate/airconditioner/state/1",
                    "apply": "return JSON.parse(message).targetTemperature;"
                },
                "setCoolingThresholdTemperature": {
                    "topic": "home/hillstate/airconditioner/command/1",
                    "apply": "return JSON.stringify({targetTemperature: message});"
                }
            },
            "integerValue": true,
            "minTemperature": 18,
            "maxTemperature": 30,
            "targetHeaterCoolerValues": [
                0,
                1,
                2
            ],
            "restrictHeaterCoolerState": [
                2
            ],
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "heaterCooler",
            "name": "Bedroom AirConditioner (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getActive": {
                    "topic": "home/hillstate/airconditioner/state/2",
                    "apply": "return JSON.parse(message).active;"
                },
                "setActive": {
                    "topic": "home/hillstate/airconditioner/command/2",
                    "apply": "return JSON.stringify({active: message});"
                },
                "getCurrentHeaterCoolerState": {
                    "topic": "home/hillstate/airconditioner/state/2",
                    "apply": "return JSON.parse(message).state;"
                },
                "getRotationSpeed": {
                    "topic": "home/hillstate/airconditioner/state/2",
                    "apply": "return JSON.parse(message).rotationspeed;"
                },
                "setRotationSpeed": {
                    "topic": "home/hillstate/airconditioner/command/2",
                    "apply": "return JSON.stringify({rotationspeed: message});"
                },
                "getCurrentTemperature": {
                    "topic": "home/hillstate/airconditioner/state/2",
                    "apply": "return JSON.parse(message).currentTemperature;"
                },
                "getCoolingThresholdTemperature": {
                    "topic": "home/hillstate/airconditioner/state/2",
                    "apply": "return JSON.parse(message).targetTemperature;"
                },
                "setCoolingThresholdTemperature": {
                    "topic": "home/hillstate/airconditioner/command/2",
                    "apply": "return JSON.stringify({targetTemperature: message});"
                }
            },
            "integerValue": true,
            "minTemperature": 18,
            "maxTemperature": 30,
            "targetHeaterCoolerValues": [
                0,
                1,
                2
            ],
            "restrictHeaterCoolerState": [
                2
            ],
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "heaterCooler",
            "name": "Library AirConditioner (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getActive": {
                    "topic": "home/hillstate/airconditioner/state/3",
                    "apply": "return JSON.parse(message).active;"
                },
                "setActive": {
                    "topic": "home/hillstate/airconditioner/command/3",
                    "apply": "return JSON.stringify({active: message});"
                },
                "getCurrentHeaterCoolerState": {
                    "topic": "home/hillstate/airconditioner/state/3",
                    "apply": "return JSON.parse(message).state;"
                },
                "getRotationSpeed": {
                    "topic": "home/hillstate/airconditioner/state/3",
                    "apply": "return JSON.parse(message).rotationspeed;"
                },
                "setRotationSpeed": {
                    "topic": "home/hillstate/airconditioner/command/3",
                    "apply": "return JSON.stringify({rotationspeed: message});"
                },
                "getCurrentTemperature": {
                    "topic": "home/hillstate/airconditioner/state/3",
                    "apply": "return JSON.parse(message).currentTemperature;"
                },
                "getCoolingThresholdTemperature": {
                    "topic": "home/hillstate/airconditioner/state/3",
                    "apply": "return JSON.parse(message).targetTemperature;"
                },
                "setCoolingThresholdTemperature": {
                    "topic": "home/hillstate/airconditioner/command/3",
                    "apply": "return JSON.stringify({targetTemperature: message});"
                }
            },
            "integerValue": true,
            "minTemperature": 18,
            "maxTemperature": 30,
            "targetHeaterCoolerValues": [
                0,
                1,
                2
            ],
            "restrictHeaterCoolerState": [
                2
            ],
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "heaterCooler",
            "name": "PC Room AirConditioner (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getActive": {
                    "topic": "home/hillstate/airconditioner/state/4",
                    "apply": "return JSON.parse(message).active;"
                },
                "setActive": {
                    "topic": "home/hillstate/airconditioner/command/4",
                    "apply": "return JSON.stringify({active: message});"
                },
                "getCurrentHeaterCoolerState": {
                    "topic": "home/hillstate/airconditioner/state/4",
                    "apply": "return JSON.parse(message).state;"
                },
                "getRotationSpeed": {
                    "topic": "home/hillstate/airconditioner/state/4",
                    "apply": "return JSON.parse(message).rotationspeed;"
                },
                "setRotationSpeed": {
                    "topic": "home/hillstate/airconditioner/command/4",
                    "apply": "return JSON.stringify({rotationspeed: message});"
                },
                "getCurrentTemperature": {
                    "topic": "home/hillstate/airconditioner/state/4",
                    "apply": "return JSON.parse(message).currentTemperature;"
                },
                "getCoolingThresholdTemperature": {
                    "topic": "home/hillstate/airconditioner/state/4",
                    "apply": "return JSON.parse(message).targetTemperature;"
                },
                "setCoolingThresholdTemperature": {
                    "topic": "home/hillstate/airconditioner/command/4",
                    "apply": "return JSON.stringify({targetTemperature: message});"
                }
            },
            "integerValue": true,
            "minTemperature": 18,
            "maxTemperature": 30,
            "targetHeaterCoolerValues": [
                0,
                1,
                2
            ],
            "restrictHeaterCoolerState": [
                2
            ],
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "switch",
            "name": "Elevator Call Downside (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOn": {
                    "topic": "home/hillstate/elevator/state",
                    "apply": "return (JSON.parse(message).state == 6);"
                },
                "setOn": {
                    "topic": "home/hillstate/elevator/command",
                    "apply": "return JSON.stringify({state: 6});"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "occupancySensor",
            "name": "Elevator Arrived (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getOccupancyDetected": {
                    "topic": "home/hillstate/elevator/state",
                    "apply": "return (JSON.parse(message).state == 1);"
                }
            },
            "integerValue": true,
            "onValue": 1,
            "offValue": 0,
            "logMqtt": true
        },
        {
            "accessory": "mqttthing",
            "type": "lockMechanism",
            "name": "Doorlock (MQTT)",
            "url": "mosquitto broker url",
            "username": "mosquitto auth id",
            "password": "mosquitto auth password",
            "topics": {
                "getLockCurrentState": {
                    "topic": "home/hillstate/doorlock/state",
                    "apply": "return JSON.parse(message).state;"
                },
                "getLockTargetState": {
                    "topic": "home/hillstate/doorlock/state",
                    "apply": "return JSON.parse(message).state;"
                },
                "setLockTargetState": {
                    "topic": "home/hillstate/doorlock/command",
                    "apply": "return JSON.stringify({state: message});"
                }
            },
            "lockValues": [
                "Unsecured",
                "Secured",
                "Jammed",
                "Unknown"
            ],
            "logMqtt": true
        }
    ],
    "platforms": [
        {
            "name": "Config",
            "port": 8581,
            "platform": "config"
        },
        {
            "units": "si",
            "interval": 5,
            "stations": [
                {
                    "nameNow": "Yogyui Weather Station",
                    "service": "openweathermap",
                    "key": "Open Weather Map API Key",
                    "locationGeo": [
                        37.33294668,
                        127.0673802
                    ],
                    "locationCity": "Yongin, KR",
                    "language": "en",
                    "compatibility": "both",
                    "conditionCategory": "detailed",
                    "now": true,
                    "extraHumidity": false
                }
            ],
            "platform": "WeatherPlus"
        }
    ]
}
